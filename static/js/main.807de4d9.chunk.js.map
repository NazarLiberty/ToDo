{"version":3,"sources":["components/Snackbar.js","App/App.js","index.js"],"names":["Alert","props","elevation","variant","MySnackbar","severity","text","React","useState","open","setOpen","handleClose","event","reason","del","delDay","addDay","onClick","children","Snackbar","autoHideDuration","onClose","ControlButton","title","symbol","elClass","type","countDay","className","action","Wrapper","parseList","localStorage","length","JSON","parse","getItem","list","dayNumber","setDayNumber","day","setDay","deletedDay","setDeletedDay","page","setPage","index","setIndex","setList","setItem","stringify","DayList","Number","o","push","newList","map","e","indexOf","forEach","element","TaskPage","key","id","splice","click","done","addTask","inputValue","alert","count","unshift","edit","renderList","renderDay","Day","active","dayClass","onChange","target","value","placeholder","TaskList","window","confirm","clear","actionDeleteTask","actionEdit","Task","editor","setEditor","setText","checkClass","App","testList","ReactDOM","render","document","getElementById"],"mappings":"gQAIA,SAASA,EAAMC,GACX,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGjD,SAASG,EAAWH,GAAQ,IAE3BI,EACAC,EAH0B,EACNC,IAAMC,UAAS,GADT,mBACvBC,EADuB,KACjBC,EADiB,KAS1BT,EAAMQ,OACNC,GAAQ,GACRJ,EAAO,QAEX,IAAMK,EAAc,SAACC,EAAOC,GACT,cAAXA,GAIJH,GAAQ,IAUZ,OARIT,EAAMa,KACNT,EAAW,QACXC,EAAO,aAAWL,EAAMc,OAAU,uBAGlCV,EAAW,UACXC,EAAO,aAAWL,EAAMe,OAAU,oBAGlC,yBAAKC,QAzBW,WAEhBP,GAAQ,KAwBHT,EAAMiB,SACP,kBAACC,EAAA,EAAD,CAAUV,KAAMA,EAAMW,iBAAkB,IAAMC,QAASV,GACnD,kBAAC,EAAD,CAAOU,QAASV,EAAaN,SAAUA,GAClCC,KCpCrB,SAASgB,EAAcrB,GACnB,IAAIsB,EACAC,EAAS,GACTC,EAAU,SACd,MAAmB,WAAfxB,EAAMyB,MACND,GAAW,gBACXD,EAAS,kBAACpB,EAAD,CAAYU,KAAK,EAAOE,OAAQf,EAAM0B,UAAtC,IAAiD,uBAAGC,UAAU,uBAA9D,KACF,yBAAKA,UAAWH,EAASR,QAAShB,EAAM4B,OAAQN,MAAM,WAAWC,KAEzD,YAAfvB,EAAMyB,OAAsBF,EAAS,uBAAGI,UAAU,kBAAsBH,GAAW,qBACpE,WAAfxB,EAAMyB,OACNH,EAAQ,aACRE,GAAW,qBACXD,EAAS,uBAAGI,UAAU,sBAEP,YAAf3B,EAAMyB,OAAsBF,EAAS,uBAAGI,UAAU,eAAmBH,EAAU,sBAChE,YAAfxB,EAAMyB,OAAsBF,EAAS,uBAAGI,UAAU,qBAAyBH,GAAW,iBACvE,aAAfxB,EAAMyB,OAAuBF,EAAS,uBAAGI,UAAU,gBAAoBH,GAAW,iBACnE,aAAfxB,EAAMyB,OAAuBF,EAAS,KAAMC,GAAW,iBACpD,4BAAQG,UAAWH,EAASR,QAAShB,EAAM4B,OAAQN,MAAOA,GAAQC,IAG7E,SAASM,EAAQ7B,GACb,IAAI8B,EACyBA,EAAzBC,aAAaC,OAAS,EAAeC,KAAKC,MAAMH,aAAaI,QAAQ,SACxDnC,EAAMoC,KAHH,MAIc7B,mBAASP,EAAM0B,UAJ7B,mBAIbW,EAJa,KAIFC,EAJE,OAKE/B,mBAAS,GALX,mBAKbgC,EALa,KAKRC,EALQ,OAMgBjC,mBAAS,MANzB,mBAMbkC,EANa,KAMDC,EANC,OAOInC,mBAASuB,GAPb,mBAOba,EAPa,KAOPC,EAPO,OAQMrC,mBAAS,GARf,mBAQbsC,EARa,KAQNC,EARM,OASIvC,mBAASoC,EAAKE,GAAOF,MATzB,mBASbP,EATa,KASPW,EATO,KA4GpB,OAlGAhB,aAAaiB,QAAQ,OAAQf,KAAKgB,UAAUN,IAkGrC,yBAAKhB,UAAU,WAClB,kBAACuB,EAAD,CAASP,KAAMA,EAAM5B,OAvEzB,WACQgB,aAAaL,UAAUY,EAAaa,OAAOpB,aAAaL,UAAY,GACxEA,IACAK,aAAaiB,QAAQ,WAAYtB,GACjC,IAAI0B,EAAI,CACJb,IAAKb,EAAW,EAChBiB,KAAM,IAEVA,EAAKU,KAAKD,GACV,IAAIE,EAAUX,EAAKY,KAAI,SAACC,GAAD,OAAOA,KAC9BZ,EAAQU,IA6DmCd,OA3D/C,SAAsBD,GAClB,IAAIkB,EACJd,EAAKe,SAAQ,SAAAC,GACLA,EAAQpB,MAAQA,IAChBkB,EAAUd,EAAKc,QAAQE,GACvBZ,EAAQY,EAAQhB,UAGxBG,EAASW,GACTjB,EAAOD,IAkD0DA,IAAKA,EAAKb,SAAUW,IACrF,kBAACuB,EAAD,CAAUxB,KAAMA,EAAMvB,IApF1B,SAA0BgD,GACtBzB,EAAKsB,SAAQ,SAAAC,GACLA,EAAQG,KAAOD,GAAKlB,EAAKE,GAAOF,KAAKoB,OAAOpB,EAAKE,GAAOF,KAAKc,QAAQE,GAAU,MAEvFZ,EAAQJ,EAAKE,GAAOF,KAAKY,KAAI,SAACC,GAAD,OAAOA,OAgFSQ,MA9EjD,SAAeH,GACXzB,EAAKsB,SAAQ,SAAAC,GACLA,EAAQG,KAAOD,IAAKF,EAAQM,MAAQN,EAAQM,SAEpDlB,EAAQX,EAAKmB,KAAI,SAACC,GAAD,OAAOA,OA2EpBU,QApGR,WACI,GAA0B,IAAtBC,EAAWnC,OAAcoC,MAAM,oCAC9B,CACDC,IACAtC,aAAaiB,QAAQ,QAASqB,GAC9B,IAAIjB,EAAI,CACJ/C,KAAM8D,EACNF,MAAM,EACNH,GAAIO,GAER1B,EAAKE,GAAOF,KAAK2B,QAAQlB,GACzB,IAAIE,EAAUX,EAAKE,GAAOF,KAAKY,KAAI,SAACC,GAAD,OAAOA,KAC1CT,EAAQO,KAwFgBxC,OAjDhC,WAEI,IAAI2C,EADJf,EAAcH,GAEd,IAAIe,EAAU,GACdX,EAAKe,SAAQ,SAAAC,GACLA,EAAQpB,MAAQA,EAAKe,EAAQD,KAAKM,GACjCF,EAAUd,EAAKc,QAAQE,MAEhB,IAAZF,GAAiC,IAAhBd,EAAKX,SACtBY,EAAQU,GACRR,EAAS,GACTN,EAAOG,EAAK,GAAGJ,KACfQ,EAAQJ,EAAK,GAAGA,OAGJ,IAAZc,GAAiBd,EAAKX,OAAS,IAC/BY,EAAQU,GACRR,EAAS,GACTN,EAAOG,EAAK,GAAGJ,KACfQ,EAAQJ,EAAK,GAAGA,OAGhBc,IAAYd,EAAKX,OAAS,GAAKW,EAAKX,OAAS,IAC7Cc,EAASW,EAAU,GACnBb,EAAQU,GACRd,EAAOG,EAAKc,EAAU,GAAGlB,KACzBQ,EAAQJ,EAAKc,EAAU,GAAGd,OAE1Bc,EAAU,GAAKA,EAAUd,EAAKX,OAAS,IACvCc,EAASW,EAAU,GACnBb,EAAQU,GACRd,EAAOG,EAAKc,EAAU,GAAGlB,KACzBQ,EAAQJ,EAAKc,EAAU,GAAGd,QAiBuBJ,IAAKA,EAAKgC,KAZnE,SAAwBV,EAAKxD,GACzBsC,EAAKe,SAAQ,SAAAC,GACTA,EAAQhB,KAAKe,SAAQ,SAAAF,GACbA,EAAEM,KAAOD,IAAKL,EAAEnD,KAAOA,SAGnC,IAAImE,EAAa7B,EAAKY,KAAI,SAACC,GAAD,OAAOA,KACjCZ,EAAQ4B,IAK6E/B,WAAYA,KAIzG,SAASS,EAAQlD,GACb,SAASwC,EAAOD,GACZvC,EAAMwC,OAAOD,GAMjB,IAAIkC,EAAYzE,EAAM2C,KAAKY,KAAI,SAACC,GAC5B,OAAIA,EAAEjB,MAAQvC,EAAMuC,IAAY,kBAACmC,EAAD,CAAKrE,KAAMmD,EAAEjB,IAAKsB,IAAKL,EAAEjB,IAAKA,IAAKiB,EAAEjB,IAAKC,OAAQA,EAAQmC,QAAQ,IAC3F,kBAACD,EAAD,CAAKrE,KAAMmD,EAAEjB,IAAKsB,IAAKL,EAAEjB,IAAKA,IAAKiB,EAAEjB,IAAKC,OAAQA,OAG7D,OACI,yBAAKb,UAAU,YACX,kBAACN,EAAD,CAAeI,KAAK,SAASG,OAXrC,WACI5B,EAAMe,UAU2CW,SAAU1B,EAAM0B,WAC5D+C,GASb,SAASC,EAAI1E,GACT,IAAI4E,EAAW,MAKf,OAJI5E,EAAM2E,SAAQC,GAAY,gBAIvB,yBAAKjD,UAAWiD,EAAU5D,QAHjC,SAAgBuB,GACZvC,EAAMwC,OAAOxC,EAAMuC,OAGnB,yBAAKZ,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,cACd3B,EAAMK,KAJJ,IAIU,0BAAMsB,UAAU,YAAhB,QAGrB,SAASiC,EAAS5D,GAyBd,OAAO,yBAAK2B,UAAU,aAClB,kBAACxB,EAAD,CAAYU,KAAK,EAAMC,OAAQd,EAAMyC,YAAY,kBAACpB,EAAD,CAAeI,KAAK,SAASG,OAzBlF,WACI5B,EAAMc,OAAOd,EAAMuC,SAyBnB,yBAAKZ,UAAU,oBACX,wBAAIA,UAAU,oBAAd,OAAsC3B,EAAMuC,IAA5C,gBACA,6BAAK,2BAAOd,KAAK,OAAOE,UAAU,mBAAmBkD,SAhB7D,SAAqBrB,GACjBW,EAAaX,EAAEsB,OAAOC,OAe0DC,YAAY,8BACpF,kBAAC3D,EAAD,CAAeI,KAAK,UAAUG,OA1B1C,SAAuBiC,GACnB7D,EAAMkE,QAAQL,MAwBV,KAEA,kBAACoB,EAAD,CAAU7C,KAAMpC,EAAMoC,KAAMvB,IAxBpC,SAA0BgD,GACtB7D,EAAMa,IAAIgD,IAuB6CG,MArB3D,SAAeH,GACX7D,EAAMgE,MAAMH,IAoByDU,KAfzE,SAAoBV,EAAKxD,GACrBL,EAAMuE,KAAKV,EAAKxD,MAeZ,yBAAKsB,UAAU,aAAaX,QAbpC,WACiBkE,OAAOC,QAAQ,kFAExBpD,aAAaqD,UAWT,kBAAC/D,EAAD,CAAeI,KAAK,YACpB,0BAAME,UAAU,oBAAhB,mBAKhB,SAASsD,EAASjF,GACd,SAASqF,EAAiBxB,GACtB7D,EAAMa,IAAIgD,GAEd,SAASG,EAAMH,GACX7D,EAAMgE,MAAMH,GAEhB,SAASyB,EAAWzB,EAAKxD,GACrBL,EAAMuE,KAAKV,EAAKxD,GAEpB,IAAImE,EAAaxE,EAAMoC,KAAKmB,KAAI,SAACC,GAC7B,OAAO,kBAAC+B,EAAD,CAAMlF,KAAMmD,EAAEnD,KAAM4D,KAAMT,EAAES,KAAMJ,IAAKL,EAAEM,GAAIjD,IAAKwE,EAAkBvB,GAAIN,EAAEM,GAAIE,MAAOA,EAAOO,KAAMe,OAE7G,OAA0B,IAAtBtF,EAAMoC,KAAKJ,OAAqB,yBAAKL,UAAU,oBAAf,mBACxB,yBAAKA,UAAU,wBACtB6C,GAGT,SAASe,EAAKvF,GAAQ,IAAD,EACWO,mBAAS,GADpB,mBACViF,EADU,KACFC,EADE,OAEOlF,mBAASP,EAAMK,MAFtB,mBAEVA,EAFU,KAEJqF,EAFI,KASjB,SAASJ,IACLtF,EAAMuE,KAAKvE,EAAM8D,GAAIzD,GACrBoF,GAAWD,GAKf,IAAIG,EAAa,mBACbnE,EAAU,kBAGd,OAFIxB,EAAMiE,OAAM0B,GAAc,6BAC1B3F,EAAMiE,OAAMzC,GAAW,4BACvBgE,IAAWxF,EAAMiE,KACV,yBAAKtC,UAAU,2BAClB,yBAAKA,UAAWH,GACZ,yBAAKG,UAAWgE,GAAhB,KACA,2BAAOlE,KAAK,OAAOoD,SAX/B,SAA0BrB,GACtBkC,EAAQlC,EAAEsB,OAAOC,QAUsCA,MAAO1E,EAAMsB,UAAU,2BAE1E,yBAAKA,UAAU,gBACX,kBAACN,EAAD,CAAeI,KAAK,WAAWG,OAAQ0D,MAIvC,yBAAK3D,UAAU,2BACvB,yBAAKA,UAAWH,EAASR,QA1B7B,WACIhB,EAAMgE,MAAMhE,EAAM8D,MA0Bd,yBAAKnC,UAAWgE,GAAhB,KACC3F,EAAMK,MAEX,yBAAKsB,UAAU,gBACX,kBAACN,EAAD,CAAeI,KAAK,WAAWG,OAAQ0D,IACvC,kBAACjE,EAAD,CAAeI,KAAK,UAAUG,OAnCtC,WACI5B,EAAMa,IAAIb,EAAM8D,SAsCjB,SAAS8B,IACZ,OAAO,kBAAC/D,EAAD,CAASO,KAAMyD,EAAUnE,SAAUA,IAG9C,IAmBI2C,EACA3C,EApBAmE,EAAW,CACX,CACItD,IAAK,EACLI,KAAM,CAAC,CACHtC,KAAM,uBAAwB4D,MAAM,EAAMH,GAAI,UAItD,CACIvB,IAAK,EACLI,KAAM,IAEV,CACIJ,IAAK,EACLI,KAAM,KAGVwB,EAAa,GAI2BE,EAAN,OAAlCtC,aAAaI,QAAQ,SAA2B,EACvCgB,OAAOpB,aAAaI,QAAQ,UACMT,EAAN,OAArCK,aAAaI,QAAQ,YAAiC,EAC1CgB,OAAOpB,aAAaI,QAAQ,a,MC9S5C2D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.807de4d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport function MySnackbar(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let severity;\r\n    let text;\r\n    const handleClick = () => {\r\n\r\n        setOpen(true);\r\n\r\n    };\r\n    if (props.open) {\r\n        setOpen(true)\r\n        text = \"TEST\"\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    if (props.del) {\r\n        severity = \"error\"\r\n        text = \"Day №\" + (props.delDay) + \" have been deleted\"\r\n    }\r\n    else {\r\n        severity = \"success\"\r\n        text = \"Day №\" + (props.addDay) + \" have been added\"\r\n    }\r\n    return (\r\n        <div onClick={handleClick}>\r\n            {props.children}\r\n            <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {text}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState } from 'react';\r\nimport { MySnackbar } from \"../components/Snackbar\"\r\n\r\nfunction ControlButton(props) {\r\n    let title;\r\n    let symbol = \"\"\r\n    let elClass = \"button\"\r\n    if (props.type === \"addDay\") {\r\n        elClass += \" button--days\"\r\n        symbol = <MySnackbar del={false} addDay={props.countDay}> <i className=\"far fa-plus-square\"></i> </MySnackbar>\r\n        return <div className={elClass} onClick={props.action} title=\"Add day\">{symbol}</div>\r\n    }\r\n    if (props.type === \"addTask\") { symbol = <i className=\"fas fa-marker\"></i>; elClass += \" button--add_task\" }\r\n    if (props.type === \"delDay\") {\r\n        title = \"Delete day\"\r\n        elClass += \" button--task_page\"\r\n        symbol = <i className=\"far fa-trash-alt\"></i>\r\n    }\r\n    if (props.type === \"delHash\") { symbol = <i className=\"fas fa-ban\"></i>; elClass = \"clear-hash__button\" }\r\n    if (props.type === \"delTask\") { symbol = <i className=\"far fa-trash-alt\"></i>; elClass += \" button--task\" }\r\n    if (props.type === \"editTask\") { symbol = <i className=\"far fa-edit\"></i>; elClass += \" button--task\" }\r\n    if (props.type === \"editSave\") { symbol = \"OK\"; elClass += \" button--task\" }\r\n    return <button className={elClass} onClick={props.action} title={title}>{symbol}</button>\r\n}\r\n\r\nfunction Wrapper(props) {\r\n    let parseList;\r\n    if (localStorage.length > 0) parseList = JSON.parse(localStorage.getItem(\"days\"))\r\n    else parseList = props.list\r\n    const [dayNumber, setDayNumber] = useState(props.countDay)\r\n    const [day, setDay] = useState(1)\r\n    const [deletedDay, setDeletedDay] = useState(null)\r\n    const [page, setPage] = useState(parseList)\r\n    const [index, setIndex] = useState(0)\r\n    const [list, setList] = useState(page[index].page);\r\n    localStorage.setItem(\"days\", JSON.stringify(page))\r\n    function actionAddTask() {\r\n        if (inputValue.length === 0) alert(\"Type text of new task please\")\r\n        else {\r\n            count++\r\n            localStorage.setItem('count', count)\r\n            let o = {\r\n                text: inputValue,\r\n                done: false,\r\n                id: count,\r\n            }\r\n            page[index].page.unshift(o)\r\n            let newList = page[index].page.map((e) => e)\r\n            setList(newList)\r\n        }\r\n    }\r\n    function actionDeleteTask(key) {\r\n        list.forEach(element => {\r\n            if (element.id === key) page[index].page.splice(page[index].page.indexOf(element), 1)\r\n        });\r\n        setList(page[index].page.map((e) => e))\r\n    }\r\n    function click(key) {\r\n        list.forEach(element => {\r\n            if (element.id === key) element.done = !element.done\r\n        });\r\n        setList(list.map((e) => e))\r\n    }\r\n    function actionAddDay() {\r\n        if (localStorage.countDay) setDayNumber(Number(localStorage.countDay) + 2)\r\n        countDay++\r\n        localStorage.setItem('countDay', countDay)\r\n        let o = {\r\n            day: countDay + 1,\r\n            page: []\r\n        }\r\n        page.push(o)\r\n        let newList = page.map((e) => e)\r\n        setPage(newList)\r\n    }\r\n    function actionSetDay(day) {\r\n        let indexOf;\r\n        page.forEach(element => {\r\n            if (element.day === day) {\r\n                indexOf = page.indexOf(element)\r\n                setList(element.page)\r\n            }\r\n        });\r\n        setIndex(indexOf)\r\n        setDay(day)\r\n\r\n    }\r\n    function actionDeleteDay() {\r\n        setDeletedDay(day)\r\n        let indexOf; // deleted item\r\n        let newList = []\r\n        page.forEach(element => {\r\n            if (element.day !== day) newList.push(element)\r\n            else indexOf = page.indexOf(element)\r\n        });\r\n        if (indexOf === 0 && page.length === 2) {\r\n            setPage(newList)\r\n            setIndex(0)\r\n            setDay(page[1].day)\r\n            setList(page[1].page)\r\n\r\n        }\r\n        if (indexOf === 0 && page.length > 2) {\r\n            setPage(newList)\r\n            setIndex(1)\r\n            setDay(page[1].day)\r\n            setList(page[1].page)\r\n\r\n        }\r\n        if (indexOf === page.length - 1 && page.length > 1) {\r\n            setIndex(indexOf - 1)\r\n            setPage(newList)\r\n            setDay(page[indexOf - 1].day)\r\n            setList(page[indexOf - 1].page)\r\n        }\r\n        if (indexOf > 0 && indexOf < page.length - 1) {\r\n            setIndex(indexOf - 1)\r\n            setPage(newList)\r\n            setDay(page[indexOf - 1].day)\r\n            setList(page[indexOf - 1].page)\r\n        }\r\n\r\n\r\n    }\r\n    function actionEditTask(key, text) {\r\n        page.forEach(element => {\r\n            element.page.forEach(e => {\r\n                if (e.id === key) e.text = text;\r\n            })\r\n        });\r\n        let renderList = page.map((e) => e)\r\n        setPage(renderList)\r\n    }\r\n    return <div className=\"wrapper\">\r\n        <DayList page={page} addDay={actionAddDay} setDay={actionSetDay} day={day} countDay={dayNumber} />\r\n        <TaskPage list={list} del={actionDeleteTask} click={click}\r\n            addTask={actionAddTask} delDay={actionDeleteDay} day={day} edit={actionEditTask} deletedDay={deletedDay} />\r\n    </div>\r\n}\r\n\r\nfunction DayList(props) {\r\n    function setDay(day) {\r\n        props.setDay(day)\r\n    }\r\n    function addDay() {\r\n        props.addDay()\r\n    }\r\n\r\n    let renderDay = props.page.map((e) => {\r\n        if (e.day === props.day) return <Day text={e.day} key={e.day} day={e.day} setDay={setDay} active={true} />\r\n        return <Day text={e.day} key={e.day} day={e.day} setDay={setDay} />\r\n    })\r\n\r\n    return (\r\n        <div className=\"day-list\">\r\n            <ControlButton type=\"addDay\" action={addDay} countDay={props.countDay} />\r\n            {renderDay}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction Day(props) {\r\n    let dayClass = \"day\"\r\n    if (props.active) dayClass += \" day--active\"\r\n    function setDay(day) {\r\n        props.setDay(props.day)\r\n    }\r\n    return <div className={dayClass} onClick={setDay}>\r\n        <div className=\"day__line day__line--sub1\"></div>\r\n        <div className=\"day__line day__line--sub2\"></div>\r\n        <div className=\"day__line\"></div>\r\n        {props.text} <span className=\"day__sub\">DAY</span>\r\n    </div>\r\n}\r\nfunction TaskPage(props) {\r\n    function delDay() {\r\n        props.delDay(props.day)\r\n    }\r\n    function actionAddTask(key) {\r\n        props.addTask(key)\r\n    }\r\n    function actionDeleteTask(key) {\r\n        props.del(key)\r\n    }\r\n    function click(key) {\r\n        props.click(key)\r\n    }\r\n    function valueReader(e) {\r\n        inputValue = e.target.value\r\n    }\r\n    function actionEdit(key, text) {\r\n        props.edit(key, text)\r\n    }\r\n    function actionDeleteHash() {\r\n        let choice = window.confirm(\"This action will remove your saved days and tasks after reload. Are you sure?\")\r\n        if (choice) {\r\n            localStorage.clear();\r\n        }\r\n    }\r\n    return <div className=\"task-page\">\r\n        <MySnackbar del={true} delDay={props.deletedDay}><ControlButton type=\"delDay\" action={delDay} /></MySnackbar>\r\n        <div className=\"task-page__inner\">\r\n            <h1 className=\"task-page__title\">Day {props.day}. Task list:</h1>\r\n            <div><input type=\"text\" className=\"task-page__input\" onChange={valueReader} placeholder=\"What is your focus today?\" />\r\n                <ControlButton type=\"addTask\" action={actionAddTask} /> </div>\r\n            <TaskList list={props.list} del={actionDeleteTask} click={click} edit={actionEdit} />\r\n            <div className=\"clear-hash\" onClick={actionDeleteHash}>\r\n                <ControlButton type=\"delHash\" />\r\n                <span className=\"clear-hash__text\"> clear hash </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nfunction TaskList(props) {\r\n    function actionDeleteTask(key) {\r\n        props.del(key)\r\n    }\r\n    function click(key) {\r\n        props.click(key)\r\n    }\r\n    function actionEdit(key, text) {\r\n        props.edit(key, text)\r\n    }\r\n    let renderList = props.list.map((e) => {\r\n        return <Task text={e.text} done={e.done} key={e.id} del={actionDeleteTask} id={e.id} click={click} edit={actionEdit} />\r\n    })\r\n    if (props.list.length === 0) return <div className=\"task-page__title\">Add some tasks!</div>\r\n    else return <div className=\"task-page__task-list\">\r\n        {renderList}\r\n    </div>\r\n}\r\nfunction Task(props) {\r\n    const [editor, setEditor] = useState(0)\r\n    const [text, setText] = useState(props.text)\r\n    function actionDelete() {\r\n        props.del(props.id)\r\n    }\r\n    function click() {\r\n        props.click(props.id)\r\n    }\r\n    function actionEdit() {\r\n        props.edit(props.id, text)\r\n        setEditor(!editor)\r\n    }\r\n    function actionChangeText(e) {\r\n        setText(e.target.value)\r\n    }\r\n    let checkClass = \"task-page__check\"\r\n    let elClass = \"task-page__task\";\r\n    if (props.done) checkClass += \" task-page__check--active\"\r\n    if (props.done) elClass += \" task-page__task--active\";\r\n    if (editor && !props.done) {\r\n        return <div className=\"task-page__task-wrapper\">\r\n            <div className={elClass}>\r\n                <div className={checkClass}> </div>\r\n                <input type=\"text\" onChange={actionChangeText} value={text} className=\"task-page__task-input\" />\r\n            </div>\r\n            <div className=\"button-block\">\r\n                <ControlButton type=\"editSave\" action={actionEdit} />\r\n            </div>\r\n        </div>\r\n    }\r\n    else return <div className=\"task-page__task-wrapper\">\r\n        <div className={elClass} onClick={click}>\r\n            <div className={checkClass}> </div>\r\n            {props.text}\r\n        </div>\r\n        <div className=\"button-block\">\r\n            <ControlButton type=\"editTask\" action={actionEdit} />\r\n            <ControlButton type=\"delTask\" action={actionDelete} />\r\n        </div>\r\n    </div>\r\n}\r\nexport function App() {\r\n    return <Wrapper list={testList} countDay={countDay} />\r\n}\r\n\r\nlet testList = [\r\n    {\r\n        day: 1,\r\n        page: [{\r\n            text: \"Complete application\", done: true, id: \"d1_0\",\r\n        },\r\n        ]\r\n    },\r\n    {\r\n        day: 2,\r\n        page: []\r\n    },\r\n    {\r\n        day: 3,\r\n        page: []\r\n    }\r\n]\r\nlet inputValue = \"\";\r\n\r\nlet count;\r\nlet countDay;\r\nif (localStorage.getItem(\"count\") === null) count = 2\r\nelse count = Number(localStorage.getItem('count'))\r\nif (localStorage.getItem(\"countDay\") === null) countDay = 2\r\nelse countDay = Number(localStorage.getItem('countDay'))\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App/App.js\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}